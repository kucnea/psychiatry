import React, { Component } from 'react';
import $  from 'jquery';
import jQuery  from 'jquery';
import { responsive_slides } from 'responsive-slides';

export default class responsiveslides_c extends Component {
    constructor(props) {
        super(props);
        this.state = {
            options: props.options,
            currentIndex: 0,
            intervalId: null
        };
    }

    componentDidMount() {
        const { options } = this.state;
        if (options.auto) {
            const intervalId = setInterval(() => {
                this.setState(prevState => {
                    const nextIndex = prevState.currentIndex + 1;
                    return {
                        currentIndex: nextIndex >= options.slides.length ? 0 : nextIndex
                    };
                });
            }, options.timeout);
            this.setState({ intervalId });
        }
    }

    componentWillUnmount() {
        clearInterval(this.state.intervalId);
    }

    handlePrevClick = () => {
        this.setState(prevState => {
            const prevIndex = prevState.currentIndex - 1;
            return {
                currentIndex: prevIndex < 0 ? this.props.options.slides.length - 1 : prevIndex
            };
        });
    }

    handleNextClick = () => {
        this.setState(prevState => {
            const nextIndex = prevState.currentIndex + 1;
            return {
                currentIndex: nextIndex >= this.props.options.slides.length ? 0 : nextIndex
            };
        });
    }

    render() {
        // declare count line 96
        console.log("test reponsiveslides_c : "+count++); 
        
        // $(document).ready(function() {
        //     $("#slider1").responsiveslides_c({
        //         auto: true,
        //         pager: true,
        //         nav: true,
        //         speed: 500,
        //         maxwidth: "",
        //         namespace: "centered-btns"
        //     });
        //  });

        const { options, currentIndex } = this.state;
        return (
            <div className={`responsive-slides ${options.namespace}`} style={{ maxWidth: options.maxwidth }}>
                {options.slides.map((slide, index) => (
                    <Slide key={index} image={slide.image} isActive={index === currentIndex} />
                ))}
                <button className="prev" onClick={this.handlePrevClick}>{options.prevText}</button>
                <button className="next" onClick={this.handleNextClick}>{options.nextText}</button>
                {options.pager && (
                    <Pager currentIndex={currentIndex} totalSlides={options.slides.length} />
                )}
            </div>
        );
    }
}

const Slide = ({ image, isActive }) => (
    <div className={`slide ${isActive ? 'active' : ''}`}>
        <img src={image} alt="" />
    </div>
);

const Pager = ({ currentIndex, totalSlides }) => (
    <div className="pager">
        {Array.from({ length: totalSlides }, (_, i) => (
            <span key={i} className={i === currentIndex ? 'active' : ''} />
        ))}
    </div>
);

var count = 0;